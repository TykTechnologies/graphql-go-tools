{
  "tests": [
    {
      "name": "KnownTypeNamesAreValid",
      "rule": "KnownTypeNames",
      "schema": 0,
      "query": "\n      query Foo(\n        $var: String\n        $required: [Int!]!\n        $introspectionType: __EnumValue\n      ) {\n        user(id: 4) {\n          pets { ... on Pet { name }, ...PetFields, ... { name } }\n        }\n      }\n\n      fragment PetFields on Pet {\n        name\n      }\n    ",
      "errors": []
    },
    {
      "name": "UnknownTypeNamesAreInvalid",
      "rule": "KnownTypeNames",
      "schema": 0,
      "query": "\n      query Foo($var: JumbledUpLetters) {\n        user(id: 4) {\n          name\n          pets { ... on Badger { name }, ...PetFields }\n        }\n      }\n      fragment PetFields on Peat {\n        name\n      }\n    ",
      "errors": [
        {
          "message": "Unknown type \"JumbledUpLetters\".",
          "locations": [
            {
              "line": 2,
              "column": 23
            }
          ]
        },
        {
          "message": "Unknown type \"Badger\".",
          "locations": [
            {
              "line": 5,
              "column": 25
            }
          ]
        },
        {
          "message": "Unknown type \"Peat\". Did you mean \"Pet\" or \"Cat\"?",
          "locations": [
            {
              "line": 8,
              "column": 29
            }
          ]
        }
      ]
    },
    {
      "name": "ReferencesToStandardScalarsThatAreMissingInSchema",
      "rule": "KnownTypeNames",
      "schema": 1,
      "query": "\n      query ($id: ID, $float: Float, $int: Int) {\n        __typename\n      }\n    ",
      "errors": [
        {
          "message": "Unknown type \"ID\".",
          "locations": [
            {
              "line": 2,
              "column": 19
            }
          ]
        },
        {
          "message": "Unknown type \"Float\".",
          "locations": [
            {
              "line": 2,
              "column": 31
            }
          ]
        },
        {
          "message": "Unknown type \"Int\".",
          "locations": [
            {
              "line": 2,
              "column": 44
            }
          ]
        }
      ]
    },
    {
      "name": "UseStandardTypes",
      "rule": "KnownTypeNames",
      "schema": 0,
      "query": "\n        type Query {\n          string: String\n          int: Int\n          float: Float\n          boolean: Boolean\n          id: ID\n          introspectionType: __EnumValue\n        }\n      ",
      "errors": []
    },
    {
      "name": "ReferenceTypesDefinedInsideTheSameDocument",
      "rule": "KnownTypeNames",
      "schema": 0,
      "query": "\n        union SomeUnion = SomeObject | AnotherObject\n\n        type SomeObject implements SomeInterface {\n          someScalar(arg: SomeInputObject): SomeScalar\n        }\n\n        type AnotherObject {\n          foo(arg: SomeInputObject): String\n        }\n\n        type SomeInterface {\n          someScalar(arg: SomeInputObject): SomeScalar\n        }\n\n        input SomeInputObject {\n          someScalar: SomeScalar\n        }\n\n        scalar SomeScalar\n\n        type RootQuery {\n          someInterface: SomeInterface\n          someUnion: SomeUnion\n          someScalar: SomeScalar\n          someObject: SomeObject\n        }\n\n        schema {\n          query: RootQuery\n        }\n      ",
      "errors": []
    },
    {
      "name": "UnknownTypeReferences",
      "rule": "KnownTypeNames",
      "schema": 0,
      "query": "\n        type A\n        type B\n\n        type SomeObject implements C {\n          e(d: D): E\n        }\n\n        union SomeUnion = F | G\n\n        interface SomeInterface {\n          i(h: H): I\n        }\n\n        input SomeInput {\n          j: J\n        }\n\n        directive @SomeDirective(k: K) on QUERY\n\n        schema {\n          query: L\n          mutation: M\n          subscription: N\n        }\n      ",
      "errors": [
        {
          "message": "Unknown type \"C\". Did you mean \"A\" or \"B\"?",
          "locations": [
            {
              "line": 5,
              "column": 36
            }
          ]
        },
        {
          "message": "Unknown type \"D\". Did you mean \"A\", \"B\", or \"ID\"?",
          "locations": [
            {
              "line": 6,
              "column": 16
            }
          ]
        },
        {
          "message": "Unknown type \"E\". Did you mean \"A\" or \"B\"?",
          "locations": [
            {
              "line": 6,
              "column": 20
            }
          ]
        },
        {
          "message": "Unknown type \"F\". Did you mean \"A\" or \"B\"?",
          "locations": [
            {
              "line": 9,
              "column": 27
            }
          ]
        },
        {
          "message": "Unknown type \"G\". Did you mean \"A\" or \"B\"?",
          "locations": [
            {
              "line": 9,
              "column": 31
            }
          ]
        },
        {
          "message": "Unknown type \"H\". Did you mean \"A\" or \"B\"?",
          "locations": [
            {
              "line": 12,
              "column": 16
            }
          ]
        },
        {
          "message": "Unknown type \"I\". Did you mean \"A\", \"B\", or \"ID\"?",
          "locations": [
            {
              "line": 12,
              "column": 20
            }
          ]
        },
        {
          "message": "Unknown type \"J\". Did you mean \"A\" or \"B\"?",
          "locations": [
            {
              "line": 16,
              "column": 14
            }
          ]
        },
        {
          "message": "Unknown type \"K\". Did you mean \"A\" or \"B\"?",
          "locations": [
            {
              "line": 19,
              "column": 37
            }
          ]
        },
        {
          "message": "Unknown type \"L\". Did you mean \"A\" or \"B\"?",
          "locations": [
            {
              "line": 22,
              "column": 18
            }
          ]
        },
        {
          "message": "Unknown type \"M\". Did you mean \"A\" or \"B\"?",
          "locations": [
            {
              "line": 23,
              "column": 21
            }
          ]
        },
        {
          "message": "Unknown type \"N\". Did you mean \"A\" or \"B\"?",
          "locations": [
            {
              "line": 24,
              "column": 25
            }
          ]
        }
      ]
    },
    {
      "name": "DoesNotConsiderNon-typeDefinitions",
      "rule": "KnownTypeNames",
      "schema": 0,
      "query": "\n        query Foo { __typename }\n        fragment Foo on Query { __typename }\n        directive @Foo on QUERY\n\n        type Query {\n          foo: Foo\n        }\n      ",
      "errors": [
        {
          "message": "Unknown type \"Foo\".",
          "locations": [
            {
              "line": 7,
              "column": 16
            }
          ]
        }
      ]
    },
    {
      "name": "ReferenceStandardTypesInsideExtensionDocument",
      "rule": "KnownTypeNames",
      "schema": 5,
      "query": "\n        type SomeType {\n          string: String\n          int: Int\n          float: Float\n          boolean: Boolean\n          id: ID\n          introspectionType: __EnumValue\n        }\n      ",
      "errors": []
    },
    {
      "name": "ReferenceTypesInsideExtensionDocument",
      "rule": "KnownTypeNames",
      "schema": 5,
      "query": "\n        type QueryRoot {\n          foo: Foo\n          bar: Bar\n        }\n\n        scalar Bar\n\n        schema {\n          query: QueryRoot\n        }\n      ",
      "errors": []
    },
    {
      "name": "UnknownTypeReferencesInsideExtensionDocument",
      "rule": "KnownTypeNames",
      "schema": 6,
      "query": "\n        type B\n\n        type SomeObject implements C {\n          e(d: D): E\n        }\n\n        union SomeUnion = F | G\n\n        interface SomeInterface {\n          i(h: H): I\n        }\n\n        input SomeInput {\n          j: J\n        }\n\n        directive @SomeDirective(k: K) on QUERY\n\n        schema {\n          query: L\n          mutation: M\n          subscription: N\n        }\n      ",
      "errors": [
        {
          "message": "Unknown type \"C\". Did you mean \"A\" or \"B\"?",
          "locations": [
            {
              "line": 4,
              "column": 36
            }
          ]
        },
        {
          "message": "Unknown type \"D\". Did you mean \"A\", \"B\", or \"ID\"?",
          "locations": [
            {
              "line": 5,
              "column": 16
            }
          ]
        },
        {
          "message": "Unknown type \"E\". Did you mean \"A\" or \"B\"?",
          "locations": [
            {
              "line": 5,
              "column": 20
            }
          ]
        },
        {
          "message": "Unknown type \"F\". Did you mean \"A\" or \"B\"?",
          "locations": [
            {
              "line": 8,
              "column": 27
            }
          ]
        },
        {
          "message": "Unknown type \"G\". Did you mean \"A\" or \"B\"?",
          "locations": [
            {
              "line": 8,
              "column": 31
            }
          ]
        },
        {
          "message": "Unknown type \"H\". Did you mean \"A\" or \"B\"?",
          "locations": [
            {
              "line": 11,
              "column": 16
            }
          ]
        },
        {
          "message": "Unknown type \"I\". Did you mean \"A\", \"B\", or \"ID\"?",
          "locations": [
            {
              "line": 11,
              "column": 20
            }
          ]
        },
        {
          "message": "Unknown type \"J\". Did you mean \"A\" or \"B\"?",
          "locations": [
            {
              "line": 15,
              "column": 14
            }
          ]
        },
        {
          "message": "Unknown type \"K\". Did you mean \"A\" or \"B\"?",
          "locations": [
            {
              "line": 18,
              "column": 37
            }
          ]
        },
        {
          "message": "Unknown type \"L\". Did you mean \"A\" or \"B\"?",
          "locations": [
            {
              "line": 21,
              "column": 18
            }
          ]
        },
        {
          "message": "Unknown type \"M\". Did you mean \"A\" or \"B\"?",
          "locations": [
            {
              "line": 22,
              "column": 21
            }
          ]
        },
        {
          "message": "Unknown type \"N\". Did you mean \"A\" or \"B\"?",
          "locations": [
            {
              "line": 23,
              "column": 25
            }
          ]
        }
      ]
    }
  ]
}