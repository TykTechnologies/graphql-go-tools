{
  "tests": [
    {
      "name": "NoFragments",
      "rule": "UniqueFragmentNames",
      "schema": 0,
      "query": "\n      {\n        field\n      }\n    ",
      "errors": []
    },
    {
      "name": "OneFragment",
      "rule": "UniqueFragmentNames",
      "schema": 0,
      "query": "\n      {\n        ...fragA\n      }\n\n      fragment fragA on Type {\n        field\n      }\n    ",
      "errors": []
    },
    {
      "name": "ManyFragments",
      "rule": "UniqueFragmentNames",
      "schema": 0,
      "query": "\n      {\n        ...fragA\n        ...fragB\n        ...fragC\n      }\n      fragment fragA on Type {\n        fieldA\n      }\n      fragment fragB on Type {\n        fieldB\n      }\n      fragment fragC on Type {\n        fieldC\n      }\n    ",
      "errors": []
    },
    {
      "name": "InlineFragmentsAreAlwaysUnique",
      "rule": "UniqueFragmentNames",
      "schema": 0,
      "query": "\n      {\n        ...on Type {\n          fieldA\n        }\n        ...on Type {\n          fieldB\n        }\n      }\n    ",
      "errors": []
    },
    {
      "name": "FragmentAndOperationNamedTheSame",
      "rule": "UniqueFragmentNames",
      "schema": 0,
      "query": "\n      query Foo {\n        ...Foo\n      }\n      fragment Foo on Type {\n        field\n      }\n    ",
      "errors": []
    },
    {
      "name": "FragmentsNamedTheSame",
      "rule": "UniqueFragmentNames",
      "schema": 0,
      "query": "\n      {\n        ...fragA\n      }\n      fragment fragA on Type {\n        fieldA\n      }\n      fragment fragA on Type {\n        fieldB\n      }\n    ",
      "errors": [
        {
          "message": "There can be only one fragment named \"fragA\".",
          "locations": [
            {
              "line": 5,
              "column": 16
            },
            {
              "line": 8,
              "column": 16
            }
          ]
        }
      ]
    },
    {
      "name": "FragmentsNamedTheSameWithoutBeingReferenced",
      "rule": "UniqueFragmentNames",
      "schema": 0,
      "query": "\n      fragment fragA on Type {\n        fieldA\n      }\n      fragment fragA on Type {\n        fieldB\n      }\n    ",
      "errors": [
        {
          "message": "There can be only one fragment named \"fragA\".",
          "locations": [
            {
              "line": 2,
              "column": 16
            },
            {
              "line": 5,
              "column": 16
            }
          ]
        }
      ]
    }
  ]
}